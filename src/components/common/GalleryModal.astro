---
const { items } = Astro.props;
---

<div class="portfolio-grid container" style="display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:1rem;justify-items:center;">
  {items.map(item => (
    <img 
      class="gallery-thumb" 
      src={item.thumb} 
      alt={item.alt} 
      data-detail={item.detail} 
      style="width:100%;aspect-ratio:1/1;object-fit:contain;border-radius:12px;cursor:pointer;transition:transform 0.2s;"
      on:mouseover="this.style.transform='scale(1.02)'"
      on:mouseout="this.style.transform='scale(1)'"
    />
  ))}
</div>

<!-- Overlay / Modal -->
<div id="gallery-modal" class="modal-overlay" hidden>
  <div class="modal-content">
    <button class="modal-close" aria-label="Cerrar">&times;</button>
    <div class="modal-image-container">
      <img id="gallery-modal-img" src="" alt="Detalle" loading="lazy" />
    </div>
  </div>
</div>

<style>
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    padding: 2rem;
    overflow-y: auto;
  }

  .modal-content {
    position: relative;
    background: white;
    border-radius: 12px;
    width: 95%;
    max-width: 1200px;
    max-height: 90vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    margin: 0 auto;
  }

  .modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    border: none;
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
    font-size: 1.5rem;
    line-height: 1;
    cursor: pointer;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s;
  }

  .modal-close:hover {
    background: rgba(0, 0, 0, 0.9);
  }

  .modal-image-container {
    max-height: calc(90vh - 4rem);
    overflow-x: hidden;
    overflow-y: auto;
    padding: 0;
    display: block;
    background-color: #f8f9fa;
  }

  #gallery-modal-img {
    display: block;
    max-width: none;
    max-height: none;
    width: 100%;
    height: auto;
  }

  @media (max-width: 1200px) {
    .modal-content {
      width: 95%;
      max-width: 100%;
    }
    
    .modal-image-container {
      max-height: calc(100vh - 4rem);
    }
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const thumbs = document.querySelectorAll('img.gallery-thumb');
    const modal = document.getElementById('gallery-modal');
    const modalImg = document.getElementById('gallery-modal-img');
    
    if (!modal || !modalImg) return;

    const closeModal = () => {
      modal.hidden = true;
      document.body.style.overflow = '';
    };

    const openModal = (src) => {
      modalImg.src = src;
      modal.hidden = false;
      document.body.style.overflow = 'hidden';
      // Scroll al inicio del contenedor de la imagen
      const container = modal.querySelector('.modal-image-container');
      if (container) container.scrollTop = 0;
    };

    thumbs.forEach(el => {
      el.addEventListener('click', (e) => {
        e.preventDefault();
        openModal(el.dataset.detail || el.src);
      });
    });

    // Cerrar al hacer clic fuera de la imagen o en el botÃ³n de cerrar
    modal.addEventListener('click', (e) => {
      if (e.target === modal || e.target.closest('.modal-close')) {
        closeModal();
      }
    });

    // Cerrar con la tecla Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !modal.hidden) {
        closeModal();
      }
    });
  });
</script>
